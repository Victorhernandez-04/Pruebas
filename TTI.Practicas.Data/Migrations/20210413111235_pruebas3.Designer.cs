// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTI.Practicas.Data;

namespace TTI.Practicas.Data.Migrations
{
    [DbContext(typeof(ToDoListContext))]
    [Migration("20210413111235_pruebas3")]
    partial class pruebas3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TTI.Practicas.Data.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TTI.Practicas.Data.PruebasTablas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TablasRelId")
                        .HasColumnType("int");

                    b.Property<int?>("pruebasTablasPruebasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pruebasTablasPruebasId");

                    b.ToTable("PruebaTabla");
                });

            modelBuilder.Entity("TTI.Practicas.Data.PruebasTablasRelacionadas", b =>
                {
                    b.Property<int>("PruebasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.HasKey("PruebasId");

                    b.ToTable("PruebasRelacionadas");
                });

            modelBuilder.Entity("TTI.Practicas.Data.TodoItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("TTI.Practicas.Data.PruebasTablas", b =>
                {
                    b.HasOne("TTI.Practicas.Data.PruebasTablasRelacionadas", "pruebasTablas")
                        .WithMany()
                        .HasForeignKey("pruebasTablasPruebasId");

                    b.Navigation("pruebasTablas");
                });

            modelBuilder.Entity("TTI.Practicas.Data.TodoItem", b =>
                {
                    b.HasOne("TTI.Practicas.Data.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
